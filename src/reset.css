/* makes sizing simpler */

*,
*::before,
*::after {
	box-sizing: border-box;
}

/* 
	-ms-touch-action	: manipulation;
	touch-action		: manipulation;
	-webkit-tap-highlight-color	: transparent;
 */

/* remove default spacing */
/* force styling of type through styling, rather than elements */

/* reset default text opacity of input placeholder */

:root {
	--scroll-padding-top: 0;
}

::placeholder {
	color: unset;
}

/* Remove details summary webkit styles */
::-webkit-details-marker {
	display: none;
}

* {
	margin: 0;
	padding: 0;
	min-width: 0;
	font: inherit;
}

/* Do we want to set a line height? */

html {
	-moz-text-size-adjust: none;
	-webkit-text-size-adjust: none;
	/* -webkit-text-size-adjust: 100%; */
	text-size-adjust: none;
	/* color-scheme: dark light;  */ /* We probably do not want this */
}
/* min body height */

body {
	min-height: 100svh;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
	cursor: revert;
}

p {
	--max-inline-size: 64ch;
	max-inline-size: var(--max-inline-size);
	overflow-wrap: break-word;
	text-wrap: pretty;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
	overflow-wrap: break-word;
}

/* responsive images/videos */
img,
picture,
svg,
video {
	display: block;
	max-width: 100%;
}

img {
	max-inline-size: 100%;
	max-block-size: 100%;
}

main,
menu,
dialog,
modal,
dropdown,
aside {
	isolation: isolate;
}

abbr[title] {
	border-bottom: none; /* 1 */
	text-decoration: underline; /* 2 */
	text-decoration: underline dotted; /* 2 */
}

@media (prefers-reduced-motion: no-preference) {
	:has(:target) {
		scroll-padding-top: var(--scroll-padding-top, 3rem);
		scroll-behavior: smooth;
	}
}
